es (901 sloc)  30.2 KB
swagger: '2.0'
info:
  title: Application API
  description: Build beautiful applications based on live information from your moving assets.
  version: 0.0.0
schemes:
  - https
basePath: /sap/vean/application-api/alpha
produces:
  - application/json
tags:
  - name: API Documentation and Metadata
  - name: Vehicle
  - name: Location
  - name: Event
  - name: Telemetry Data
responses:
  '400':
    description:
      __Bad Request__ -- The request is not valid, for example, the query does not contain all of the required parameters.
    schema:
      $ref: '#/definitions/Error'
  '401':
    description: __Unauthorized__ -- The request header does not have the correct authorization. Check your user's authorizations and try again.
  '403':
    description: __Forbidden__ -- Additional privileges or rights required to retrieve item. Please try again later. If the problem continues, please contact your development operations contact.
  '404':
    description: __Not Found__ -- The requested resource could not be found. Please try again later. If the problem continues, please contact your development operations contact.
    schema:
      $ref: '#/definitions/Error'
  '500':
    description: __Internal System Error__ -- An unknown error occurred. Please try again later. If the problem continues, please contact your development operations contact.
    schema:
      $ref: '#/definitions/Error'
parameters:
  Limit:
    name: limit
    in: query
    description: Specifies the maximum number of results displayed
    required: false
    type: integer
  Offset:
    name: offset
    in: query
    description: Skips the first n results in the response.
    required: false
    type: integer
  VehicleUIDParam:
    name: vehicle-uid
    in: path
    description: The unique identifier of a Vehicle or Vehicle group instance
    required: true
    type: string
  LocationUIDParam:
    name: location-uid
    in: path
    description: The unique identifier of the Location instance
    required: true
    type: string
  TripUIDParam:
    name: trip-uid
    in: path
    description: The unique identifier of the Trip instance
    required: true
    type: string
  TimeSeriesUIDParam:
    name: timeseries-uid
    in: path
    description: The unique identifier of the Time Series instance
    required: true
    type: string
  PropertyParam:
    name: features
    in: query
    description: >-
      Additional features that the system can automatically apply. You can specify multiple features by entering them as a comma-separated list in the query.
    required: false
    type: string
  TimeframeParam:
    name: timespan
    in: query
    # suggestion: make it required when feats are selected
    description: |
      Specifies the age of the data used in the response. You enter how many days (`d`), weeks (`w`), months (`m`), quarters (`q`), and years (`y`) worth of data to include. For example, `1m` will only use data from the last month, including today. You cannot combine these parameters, for example, `1m 2d` is not valid.
      The default number value if blank is value is 0. The default parameter value if blank is `30d`. For some queries, this parameter is mandatory.
    required: false
    type: string
paths:
  /:
    get:
      tags:
        - API Documentation and Metadata
      summary: Display API documentation or get a  descriptor
      description: >-
        Depending on the requested MIME type (accept header), this service can either return a human readable API documentation (text/html) that can be displayed in the browser or a machine readable description of the API (application/json or application/x-yaml).
      produces:
        - "text/html"
        - "application/x-yaml"
        - "application/json"
      responses:
        '200':
          description: __Success__
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
  # pagination - top/limit - skip
  '/Vehicle':
    get:
      tags:
        - Vehicle
      summary: Get vehicle IDs
      description: |
        With this operation, you retrieve a list of IDs of the individual vehicles and groups of vehicles in your system.
      parameters:
        - $ref: "#/parameters/Limit"
        - $ref: "#/parameters/Offset"
      responses:
        '200':
          description: __Success__
          schema:
            type: object
            required:
              - count
              - instances
            properties:
              count:
                $ref: '#/definitions/ResultCount'
              instances:
                type: array
                description: An array containing the IDs of all vehicles that match the request paramerters
                items:
                  type: object
                  required:
                    - uid
                    - id
                    - licensePlate
                  properties:
                    uid:
                      type: string
                      description: The unique identifier of the Vehicle instance
                    id:
                      type: string
                      description: >-
                        The identifier of the Vehicle instance
                    licensePlate:
                      type: string
                      description: The vehicle's registration number
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
